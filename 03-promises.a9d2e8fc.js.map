{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBA6BjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEL,WAAUJ,UAEpBU,EAAO,CAAEN,WAAUJ,S,IAhCzBJ,EAAKC,KAAKc,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOnB,EAAKI,MAAMgB,OACxBf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAIlC,IAFAC,QAAQC,IAAIjB,GAEPG,SAAW,EAAGA,UAAYF,EAAQE,UAAY,EACjDD,EAAcC,SAAUU,GACvBK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARhB,SAAUJ,EAAKoB,EAALpB,MACjBsB,YAAW,WACT5B,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANzB,EAAM,O,GAC5DA,E,IAEJ0B,OAAM,SAAAN,G,IAAGC,EAAQD,EAARhB,SAAUJ,EAAKoB,EAALpB,MAClBsB,YAAW,WACT5B,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANzB,EAAM,O,GACzDA,E,IAELc,GAASb,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  console.log(step);\n\n  for (position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay}) => {\n      setTimeout(() => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      }, delay);\n    })\n    .catch(({ position, delay}) => {\n      setTimeout(() => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n      }, delay);\n    });\n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay});\n    } else {\n      reject({ position, delay});\n    }\n  });\n  \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","delay1","Number","value","console","log","then","param","_$position","setTimeout","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a9d2e8fc.js.map"}