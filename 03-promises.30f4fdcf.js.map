{"mappings":"gfASA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,UAG7BC,EAAa,EACbC,EAAa,EACbC,EAAY,EAiChB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,WAAUQ,WAAAP,IAEpBM,EAAO,CAAEP,WAAUQ,WAAAP,G,IArCzBT,EAAKC,OAAOgB,iBAAiB,UAE7B,SAAwBC,GAEAA,EAApBC,iBAKJ,WACE,IAAgCC,EAAApB,EAAKC,OAAOoB,SAApCC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACrBnB,EAAaoB,OAAOH,EAAMI,OAC1BpB,EAAYmB,OAAOF,EAAKG,OACxBtB,EAAaqB,OAAOD,EAAOE,OAER,IAAd,IAAIC,EAAW,EAAGA,GAAYvB,EAAYuB,GAAY,EACzDpB,EAAcoB,EAAUtB,GACrBuB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAUD,EAAVb,WACjBe,YAAW,WACTjC,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAiB0B,OAAXJ,EAAW,M,GACjEA,E,IAEJK,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAU4B,EAAUP,EAAVb,WAClBe,YAAW,WACTjC,EAAAkC,OAAOK,QAAQ,sBAAqCH,OAAf1B,EAAS,QAAiB0B,OAAXE,EAAW,M,GAC9DA,E,IAEP/B,GAAcC,C,CAtBhBgC,GACAtC,EAAKC,OAAOsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["/* function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n} */\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nlet MAX_PROMPT = 0;\nlet delayValue = 0;\nlet stepValue = 0;\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(e) {\n  // заборона по замовчуванню\n  e.preventDefault();\n  onFormElPromise();\n  refs.formEl.reset();\n}\n\nfunction onFormElPromise() {\n  const { delay, step, amount } = refs.formEl.elements;\n  delayValue = Number(delay.value);\n  stepValue = Number(step.value);\n  MAX_PROMPT = Number(amount.value);\n  // виклик функцііі MAX_PROMPT разів\n  for (let position = 1; position <= MAX_PROMPT; position += 1) {\n    createPromise(position, delayValue)\n      .then(({ position, delayValue }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delayValue}ms`);\n        }, delayValue);\n      })\n      .catch(({ position, delayValue }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delayValue}ms`);\n        }, delayValue);\n      });\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delayValue });\n    } else {\n      reject({ position, delayValue });\n    }\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","$ce04d3a99e08e73b$var$MAX_PROMPT","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$createPromise","position","delayValue3","shouldResolve","Math","random","Promise","resolve","reject","delayValue","addEventListener","e","preventDefault","_elements","elements","delay","step","amount","Number","value","position1","then","param","delayValue1","setTimeout","Notify","success","concat","catch","delayValue2","failure","$ce04d3a99e08e73b$var$onFormElPromise","reset"],"version":3,"file":"03-promises.30f4fdcf.js.map"}